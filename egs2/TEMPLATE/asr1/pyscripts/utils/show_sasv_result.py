import sys
from datetime import datetime
import re

import torch
import espnet

def parse_key_value_pair(line):
    """Parse lines with comma-separated key-value pairs."""
    pairs = [p.strip() for p in line.strip().split(',')]
    return {k.split(':')[0].strip(): float(k.split(':')[1].strip()) 
            for k in pairs}

def generate_markdown_report(input_lines, model_name):
    """Generate markdown report from parsed input lines."""
    # Parse numeric values
    num_trials = int(input_lines[0].split(': ')[1])
    trg_values = parse_key_value_pair(input_lines[1])
    nontrg_values = parse_key_value_pair(input_lines[2])
    spf_values = parse_key_value_pair(input_lines[3])
    
    # Parse a-DCF and threshold
    adcf_values = parse_key_value_pair(input_lines[4])

    # Construct output
    output = f"<!-- Generated by {sys.argv[0]} -->\n"
    output += "# RESULTS\n"

    output += "| | Mean | Std |\n|---|---|---|\n"
    output += f"| Target | {trg_values['trg_mean']:.4f} | {trg_values['trg_std']:.4f} |\n"
    output += f"| Non-target | {nontrg_values['nontrg_mean']:.4f} | {nontrg_values['nontrg_std']:.4f} |\n"
    output += f"| SPF | {spf_values['spf_mean']:.4f} | {spf_values['spf_std']:.4f} |\n\n"

    output += "| Metric | Value |\n|---|---|\n"
    output += f"| min a-DCF | {adcf_values['min a-DCF']:.5f} |\n"
    output += f"| Threshold | {adcf_values['threshold']:.5f} |"

    return output

if __name__ == "__main__":
    with open(sys.argv[1], "r") as f:
        lines = f.readlines()
    
    report = generate_markdown_report(lines, sys.argv[3])
    
    with open(sys.argv[2], "w") as f:
        f.write(report)